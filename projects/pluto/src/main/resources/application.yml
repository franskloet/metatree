pluto:
  oauth2:
    base-url: http://localhost:5100
    backend-url: ${KEYCLOAK_BACKEND_URL:${pluto.oauth2.base-url}}
    realm: metatree
server:
  error:
    whitelabel:
      enabled: false
  max-http-header-size: 65535

spring:
  application:
    name: Pluto
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://jaeger-collector.jaeger:9411/
    enabled: false
  servlet:
    multipart:
      max-file-size: 1GB
      max-request-size: 1GB
  web:
    resources:
      static-locations: classpath:static,file:/opt/mercury
  cloud:
    discovery:
      client:
        composite-indicator:
          enabled: false

management:
  endpoint:
    health:
      show-details: always
  health:
    diskspace:
      enabled: false

logging:
  level:
    root: INFO

security:
  oidc:
    auth-url: ${pluto.oauth2.base-url}/auth/realms/${pluto.oauth2.realm}/protocol/openid-connect/auth
    logout-url: ${pluto.oauth2.base-url}/auth/realms/${pluto.oauth2.realm}/protocol/openid-connect/logout?redirect_uri=%s
    token-url: ${pluto.oauth2.backend-url}/auth/realms/${pluto.oauth2.realm}/protocol/openid-connect/token
    jwk-key-set-url: ${pluto.oauth2.backend-url}/auth/realms/${pluto.oauth2.realm}/protocol/openid-connect/certs
    redirect-after-logout-url: http://localhost:8080
    clientId: workspace-client
    clientSecret: ${KEYCLOAK_CLIENT_SECRET}
    scope: openid

  # Specify urls for security configuration.
  # URLs with permitAll do not require any authentication
  # URLs with needAuthentication are allowed to be accessed by any user. They are needed
  #      to show an error message if the user is not allowed to access the workspace
  # URLs with needAuthorization need an authorized user.
  urls:
    permitAll:
    - /actuator/health
    - /actuator/health/*
    - /error
    - /manifest.json
    - /login
    - /logout
    - /authorize
    - /favicon.ico
    needsAuthorization:
    - /*

zuul:
  retryable: false
  routes: {}
    # Please note that the order of the routes is relevant
    # The specific routes for will be configured when deploying
    # the application
  ignored-patterns:
  - /actuator/**
  - /api/storages/
  - /api/status
  - /api/config
  - /login
  - /logout
  - /authorize
  - /error
  ignored-headers:
  - Pragma
  - X-Frame-Options
  - X-Content-Type-Options
  - X-XSS-Protection
  - X-Permitted-Cross-Domain-Policies
  - Origin  # Including the header would trigger CORS filtering downstream, but Pluto is already doing the filtering.
  set-content-length: true
  host:
    socket-timeout-millis: 600000  # 10 minutes
    connect-timeout-millis: 2000
  ignored-services: '*'
